rule Suspicious_Base64_Encoded_Strings
{
    meta:
        description = "Detects base64 encoded strings, often used in obfuscated malware"
        author = "WSP Team"
        reference = "https://github.com/vplugins/wsp-malware-scanner/wiki"
        date = "2024-09-18"

    strings:
        $base64_string = /[A-Za-z0-9+/]{100,}={0,2}/

    condition:
        $base64_string
}

rule PHP_Shell_Exec_Usage
{
    meta:
        description = "Detects usage of shell execution functions in PHP"
        author = "WSP Team"
        reference = "https://github.com/vplugins/wsp-malware-scanner/wiki"
        date = "2024-09-18"

    strings:
        $shell_exec = "shell_exec"
        $system = "system"
        $passthru = "passthru"
        $exec = "exec"
        $popen = "popen"
        $proc_open = "proc_open"

    condition:
        any of ($shell_exec, $system, $passthru, $exec, $popen, $proc_open)
}

rule WordPress_Admin_Backdoor
{
    meta:
        description = "Detects WordPress backdoor creation attempts through user creation"
        author = "WSP Team"
        reference = "https://github.com/vplugins/wsp-malware-scanner/wiki"
        date = "2024-09-18"

    strings:
        $admin_user_creation = "wp_create_user('admin',"
        $admin_role_assignment = "wp_update_user(array('role' => 'administrator'))"

    condition:
        $admin_user_creation or $admin_role_assignment
}

rule Malicious_JS_Obfuscation
{
    meta:
        description = "Detects JavaScript obfuscation patterns commonly used in malware"
        author = "WSP Team"
        reference = "https://github.com/vplugins/wsp-malware-scanner/wiki"
        date = "2024-09-18"

    strings:
        $obfuscation_pattern = /eval\(function\(.*\)\{.*\}\);/

    condition:
        $obfuscation_pattern
}